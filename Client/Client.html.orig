<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <!--<script src="jquery-3.2.1.js"></script>-->
    <script
            src="https://code.jquery.com/jquery-2.2.4.min.js"
            integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
            crossorigin="anonymous"></script>
    <script src="http://knockoutjs.com/downloads/knockout-3.4.2.debug.js"></script>
    <script src="knockout.mapping-latest.debug.js"></script>
    <!--<script src="http://ajax.aspnetcdn.com/ajax/signalr/jquery.signalr-2.2.0.min.js"></script>-->
    <script src="signalr-client.min.js"></script>
    <script type='text/javascript' src="ko.observableDictionary.js"></script>
    <!--<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>-->
    <link rel="stylesheet" href="css/foundation.css"/>
    <link rel="stylesheet" href="css/app.css"/>
    <script src="js/vendor/modernizr.js"></script>
</head>
<body style>
    <script>
        $(() => {



            var OrderViewModel = function() {
                var self = this;
                self.clientID = ko.observable("andrew");
                self.clOrdID = ko.observable();
                self.orderId = ko.observable();
                self.price = ko.observable();
                self.side = ko.observable();
                self.orderQty = ko.observable();
                self.ordType = ko.observable("Limit");
                self.cumQty = ko.observable();
                self.transactTime = ko.observable();
                self.lastPx = ko.observable();
                self.lastQty = ko.observable();
                self.symbol = ko.observable("BTCUSD");
            };

            var Tick = function() {
                var self = this;
                self.symbol = ko.observable();
                self.price = ko.observable();
                self.change = ko.observable();
            };

            var ViewModel = function() {
                var self = this;
                self.order = new OrderViewModel();

                self.openOrders = ko.observableArray();
                self.completedOrders = ko.observableArray();
                self.ticks = new ko.observableArray();

                self.sides = ["Buy","Sell"];
                self.orderTypes = ["Market","Limit"]
                self.isPriceEnabled = ko.computed(function() {
                    return self.order.ordType() == "Limit";

                })

<<<<<<< HEAD
            self.NewOrder = () => {
                self.order.clOrdID(guid());
                self.order.orderId(guid());
                $.ajax({
                    type: "PUT",
                    data : ko.toJSON(self.order),
                    url: "http://exchange.apps.pcf.guru/api/order/" + self.order.orderId(),
                    contentType: "application/json"
                }).then(result => {
                    for (var i = 0, len = result.length; i < len; i++) {
                        var execution = ko.mapping.fromJS(result[i]);
                        self.executions.push(execution);
                    }
=======
                self.NewOrder = () => {
                    self.order.clOrdID(guid());
                    self.order.orderId(guid());
                    $.ajax({
                        type: "PUT",
                        data : ko.toJSON(self.order),
                        url: "http://exchange.apps.pcf.guru/api/order/" + self.order.orderId(),
                        contentType: "application/json"
                    }).then(result => {
                        self.GetOrders();   
                    });
                }
>>>>>>> 8f64f88037129f72158b50b99328fbea7d09de10

                self.GetOrders = () => {
                    $.ajax({
                        type: "GET",
                        url: "http://exchange.apps.pcf.guru/api/order",
                        contentType: "application/json"
                    }).then(result => {
                        self.openOrders.removeAll();
                        self.completedOrders.removeAll();
                        for (var i = 0, len = result.length; i < len; i++) {
                            console.log("result.length: " + result.length)
                            console.log(result[i]);
                            var execution = ko.mapping.fromJS(result[i]);
                            if (execution.ordStatus() === "Filled"
                                || execution.ordStatus() === "Cancelled") {
                                self.completedOrders.push(execution);
                            } else {
                                self.openOrders.push(execution);
                            }
                        }
                    })
                }

                self.CancelOrder = id => {
                    $.ajax({
                        type: "DELETE",
                        url: "http://exchange.apps.pcf.guru/api/order/" + id,
                        contentType: "application/json"
                    }).then(result => {
                        self.GetOrders();
                    }); 
                }
            };
            var viewModel = new ViewModel();

            ko.applyBindings(viewModel);
            viewModel.GetOrders();

            var logger = new signalR.ConsoleLogger(signalR.LogLevel.Information);
            var hubConnection = new signalR.HubConnection('http://mds.apps.pcf.guru/trade', { transport: signalR.TransportType.WebSockets, logger: logger });
            hubConnection.on('tick', data => {

<<<<<<< HEAD
        var logger = new signalR.ConsoleLogger(signalR.LogLevel.Information);
        var hubConnection = new signalR.HubConnection('http://mds.apps.pcf.guru/trade', { transport: signalR.TransportType.WebSockets, logger: logger });
        hubConnection.on('tick', data => {
=======
                var existingIndex = viewModel.ticks().findIndex(x => x.symbol() == data.symbol);
                if(existingIndex >= 0)
                {
                    var existing = viewModel.ticks()[existingIndex];
                    ko.mapping.fromJS(data, existing);
                }
                else
                {
                    var newTicker = ko.mapping.fromJS(data);
                    viewModel.ticks.push(newTicker);
                }
            });
            hubConnection.start();
>>>>>>> 8f64f88037129f72158b50b99328fbea7d09de10

            function guid() {
                function s4() {
                    return Math.floor((1 + Math.random()) * 0x10000)
                        .toString(16)
                        .substring(1);
                }

                return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
                    s4() + '-' + s4() + s4() + s4();
            }
        });

        //Conditional formatting for negative tick change values
        $(document).ready(function(){
            $('.change_value_element').each(function() {
            if (parseInt($(this).text()) < 0) {
                $(this).addClass('negative_value');
            }});

            $('.change_percentage_element').each(function() {
            if (parseInt($(this).text()) < 0) {
                $(this).addClass('negative_value');
            }});
        });
    </script>

    <nav class="top-bar">
        <ul class="title-area">
            <li class="name">
                <h1><a>Pivotal CF</a></h1>
            </li>
        </ul>
    </nav>
    <form>
        <fieldset>
            <legend>Client Info</legend>
            <div class="row">
                <div class="large-6 columns">
                    <div class="row collapse prefix-radius">
                        <div class="small-3 columns">
                            <span class="prefix">Client ID:</span>
                        </div>
                        <div class="small-9 columns">
                            <input class="data-bind" data-bind="value: order.clientID">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="large-6 columns">
                        <div class="row collapse prefix-radius">
                            <div class="small-3 columns">
                                <span class="prefix">Qty:</span>
                            </div>
                            <div class="small-9 columns">
                                <input class="data-bind" data-bind="value: order.orderQty">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="large-6 columns">
                    <div class="row collapse prefix-radius">
                        <div class="small-3 columns">
                            <span class="prefix">Price:</span>
                        </div>
                        <div class="small-9 columns">
                            <input class="data-bind" data-bind="value: order.price, enable: isPriceEnabled">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="large-6 columns">
                        <div class="row collapse prefix-radius">
                            <div class="small-3 columns">
                                <span class="prefix">Side:</span>
                            </div>
                            <div class="small-9 columns">
                                <select data-bind="options: sides, value: order.side">
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="large-6 columns">
                    <div class="row collapse prefix-radius">
                        <div class="small-3 columns">
                            <span class="prefix">Type:</span>
                        </div>
                        <div class="small-9 columns">
                            <select data-bind="options: orderTypes, value: order.ordType">
                            </select>
                        </div>
                    </div>
                </div>
            </div>
           <button data-bind="click: NewOrder">Place Order</button>
        </fieldset>
    </form><br>
    <h3>Orders</h3>
    <div class="tab-container">
        <ul class="tabs" data-tab="">
            <li class="tab-title active">
                <a href="#panel1">Open</a>
            </li>
            <li class="tab-title">
                <a href="#panel2">History</a>
            </li>
        </ul>
    </div>
    <div class="tabs-content">
        <div class="content active" id="panel1">
            <table width="50%">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Symbol</th>
                        <th>Type</th>
                        <th>Qty</th>
                        <th>Price</th>
                        <th>LastPx</th>
                        <th>LastQty</th>
                        <th>CumQty</th>
                        <th>Side</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: openOrders">
                    <tr>
                        <td data-bind="text: orderId"></td>
                        <td data-bind="text: symbol"></td>
                        <td data-bind="text: ordType"></td>
                        <td data-bind="text: orderQty"></td>
                        <td data-bind="text: price"></td>
                        <td data-bind="text: lastPx"></td>
                        <td data-bind="text: lastQty"></td>
                        <td data-bind="text: cumQty"></td>
                        <td data-bind="text: side"></td>
                        <td data-bind="text: ordStatus"></td>
                        <td><button data-bind="click: $parent.CancelOrder.bind($data, $data.orderId())">Cancel</button></td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="content" id="panel2">
            <table width="50%">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Symbol</th>
                        <th>Type</th>
                        <th>Qty</th>
                        <th>Price</th>
                        <th>LastPx</th>
                        <th>LastQty</th>
                        <th>CumQty</th>
                        <th>Side</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: completedOrders">
                    <tr>
                        <td data-bind="text: orderId"></td>
                        <td data-bind="text: symbol"></td>
                        <td data-bind="text: ordType"></td>
                        <td data-bind="text: orderQty"></td>
                        <td data-bind="text: price"></td>
                        <td data-bind="text: lastPx"></td>
                        <td data-bind="text: lastQty"></td>
                        <td data-bind="text: cumQty"></td>
                        <td data-bind="text: side"></td>
                        <td data-bind="text: ordStatus"></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <h3>Ticker</h3>
    <table width="50%">
        <thead>
            <tr>
                <th>Symbol</th>
                <th>Price</th>
                <th>Change</th>
                <th>Change (%)</th>
                <th>Volume</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: ticks">
            <tr>
                <td data-bind="text: symbol"></td>
                <td data-bind="text: price"></td>
                <td class="change_value_element" data-bind="text: change"></td>
                <td class="change_percentage_element" data-bind="text: changePercentage"></td>
                <td data-bind="text: volume"></td>
            </tr>
        </tbody>
    </table>
    <script src="js/vendor/jquery.js">
    </script> 
    <script src="js/foundation.min.js">
    </script> 
    <script>
         $(document).foundation();
    </script>
</body>
</html>